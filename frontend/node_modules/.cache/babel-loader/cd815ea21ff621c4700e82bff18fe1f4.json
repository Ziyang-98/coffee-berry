{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\yang7\\\\OneDrive\\\\Documents\\\\GitHub\\\\coffeeberry\\\\frontend\\\\src\\\\Market\\\\PostingShowcase\\\\OrderDialog.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Slider from \"@material-ui/core/Slider\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles(theme => ({\n  unitsForm: {\n    margin: theme.spacing(2, 0)\n  },\n  sliderHolder: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  slider: {\n    width: theme.spacing(30)\n  },\n  alert: {\n    marginBottom: theme.spacing(2)\n  }\n}));\n\nfunction Alert(props) {\n  return /*#__PURE__*/_jsxDEV(MuiAlert, {\n    elevation: 6,\n    variant: \"filled\",\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 10\n  }, this);\n}\n\n_c = Alert;\nexport default function OrderDialog({\n  posting,\n  open,\n  handleClose,\n  postOrder\n}) {\n  _s();\n\n  const classes = useStyles();\n  const [name, setName] = React.useState(\"\");\n  const [address, setAddress] = React.useState(\"\");\n  const [units, setUnits] = React.useState(0);\n\n  const handleSliderChange = (event, newValue) => {\n    setUnits(newValue);\n  };\n\n  const handleSubmit = () => {\n    if (name === \"\") {\n      handleNoName();\n    }\n\n    if (address === \"\") {\n      handleNoAddress();\n    }\n\n    if (units === 0) {\n      handleNoUnits();\n    }\n\n    if (!(name === \"\" || address === \"\" || units === 0)) {\n      console.log(\"All details are present\");\n      postOrder(posting, name, address, units);\n      setSubmitted(true);\n      setName(\"\");\n      setAddress(\"\");\n      setUnits(0);\n      handleClose();\n    }\n  };\n  /*----Alert Conditions----*/\n\n\n  const [noName, setNoName] = React.useState(false);\n  const [noAddress, setNoAddress] = React.useState(false);\n  const [noUnits, setNoUnits] = React.useState(false);\n  const [submitted, setSubmitted] = React.useState(false);\n  /*----Handle Alerts----*/\n\n  const handleNoName = () => {\n    setNoName(true);\n  };\n\n  const handleNoAddress = () => {\n    setNoAddress(true);\n  };\n\n  const handleNoUnits = () => {\n    setNoUnits(true);\n  };\n\n  const handleAlertClose = () => {\n    setSubmitted(false);\n    setNoName(false);\n    setNoAddress(false);\n    setNoUnits(false);\n  };\n\n  const getDisplayLabel = () => {\n    if (noName || noAddress || noUnits) {\n      return noName && noAddress && noUnits ? \"Please enter your name, address and the number of units cannot be 0.\" : noName && noAddress ? \"Please enter your name and address.\" : noName && noUnits ? \"Please enter your name and the number of units cannot be 0.\" : noName ? \"Please enter your name.\" : noAddress && noUnits ? \"Please enter your address and the number of units cannot be 0.\" : noAddress ? \"Please enter your address\" : \"The number of units cannot be 0\";\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"form-dialog-title\",\n      maxWidth: \"xs\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"form-dialog-title\",\n        children: \"Order Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"Please enter your name, address, the link of your product image and number of units that you would like to order. Remember your name so that you can track your orders in \\\"Your Orders\\\" page!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          required: true,\n          autoFocus: true,\n          margin: \"dense\",\n          id: \"name\",\n          label: \"Name\",\n          type: \"name\",\n          fullWidth: true,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          required: true,\n          autoFocus: true,\n          margin: \"dense\",\n          id: \"address\",\n          label: \"Address\",\n          type: \"address\",\n          fullWidth: true,\n          onChange: e => setAddress(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.unitsForm,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textSecondary\",\n            children: \"Units (In KG) *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.sliderHolder,\n            children: /*#__PURE__*/_jsxDEV(Slider, {\n              className: classes.slider,\n              defaultValue: 0,\n              value: typeof units === \"number\" ? units : 0,\n              onChange: handleSliderChange,\n              \"aria-labelledby\": \"input-slider\",\n              min: 0,\n              max: posting.units,\n              valueLabelDisplay: \"auto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            children: [\"Total: $\", units * posting.pricePerUnit]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          color: \"secondary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSubmit,\n          color: \"primary\",\n          children: \"Place Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: submitted,\n      autoHideDuration: 3000,\n      onClose: handleAlertClose,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        className: classes.alert,\n        onClose: handleAlertClose,\n        severity: \"success\",\n        children: \"The order has been confirmed!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: noName || noAddress || noUnits,\n      autoHideDuration: 3000,\n      onClose: handleAlertClose,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        className: classes.alert,\n        onClose: handleAlertClose,\n        severity: \"error\",\n        children: getDisplayLabel()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n\n_s(OrderDialog, \"Qh3q32Yc2c6mm/J/KgKToFJeJMA=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = OrderDialog;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Alert\");\n$RefreshReg$(_c2, \"OrderDialog\");","map":{"version":3,"sources":["C:/Users/yang7/OneDrive/Documents/GitHub/coffeeberry/frontend/src/Market/PostingShowcase/OrderDialog.js"],"names":["React","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Typography","Slider","Snackbar","MuiAlert","makeStyles","useStyles","theme","unitsForm","margin","spacing","sliderHolder","display","justifyContent","alignItems","slider","width","alert","marginBottom","Alert","props","OrderDialog","posting","open","handleClose","postOrder","classes","name","setName","useState","address","setAddress","units","setUnits","handleSliderChange","event","newValue","handleSubmit","handleNoName","handleNoAddress","handleNoUnits","console","log","setSubmitted","noName","setNoName","noAddress","setNoAddress","noUnits","setNoUnits","submitted","handleAlertClose","getDisplayLabel","e","target","value","pricePerUnit"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  unitsForm: {\r\n    margin: theme.spacing(2, 0),\r\n  },\r\n  sliderHolder: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  slider: {\r\n    width: theme.spacing(30),\r\n  },\r\n  alert: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nexport default function OrderDialog({ posting, open, handleClose, postOrder }) {\r\n  const classes = useStyles();\r\n\r\n  const [name, setName] = React.useState(\"\");\r\n  const [address, setAddress] = React.useState(\"\");\r\n  const [units, setUnits] = React.useState(0);\r\n\r\n  const handleSliderChange = (event, newValue) => {\r\n    setUnits(newValue);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (name === \"\") {\r\n      handleNoName();\r\n    }\r\n\r\n    if (address === \"\") {\r\n      handleNoAddress();\r\n    }\r\n\r\n    if (units === 0) {\r\n      handleNoUnits();\r\n    }\r\n\r\n    if (!(name === \"\" || address === \"\" || units === 0)) {\r\n      console.log(\"All details are present\");\r\n      postOrder(posting, name, address, units);\r\n      setSubmitted(true);\r\n      setName(\"\");\r\n      setAddress(\"\");\r\n      setUnits(0);\r\n      handleClose();\r\n    }\r\n  };\r\n  /*----Alert Conditions----*/\r\n  const [noName, setNoName] = React.useState(false);\r\n  const [noAddress, setNoAddress] = React.useState(false);\r\n  const [noUnits, setNoUnits] = React.useState(false);\r\n  const [submitted, setSubmitted] = React.useState(false);\r\n  /*----Handle Alerts----*/\r\n  const handleNoName = () => {\r\n    setNoName(true);\r\n  };\r\n\r\n  const handleNoAddress = () => {\r\n    setNoAddress(true);\r\n  };\r\n\r\n  const handleNoUnits = () => {\r\n    setNoUnits(true);\r\n  };\r\n\r\n  const handleAlertClose = () => {\r\n    setSubmitted(false);\r\n    setNoName(false);\r\n    setNoAddress(false);\r\n    setNoUnits(false);\r\n  };\r\n\r\n  const getDisplayLabel = () => {\r\n    if (noName || noAddress || noUnits) {\r\n      return noName && noAddress && noUnits\r\n        ? \"Please enter your name, address and the number of units cannot be 0.\"\r\n        : noName && noAddress\r\n        ? \"Please enter your name and address.\"\r\n        : noName && noUnits\r\n        ? \"Please enter your name and the number of units cannot be 0.\"\r\n        : noName\r\n        ? \"Please enter your name.\"\r\n        : noAddress && noUnits\r\n        ? \"Please enter your address and the number of units cannot be 0.\"\r\n        : noAddress\r\n        ? \"Please enter your address\"\r\n        : \"The number of units cannot be 0\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        maxWidth=\"xs\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Order Form</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Please enter your name, address, the link of your product image and\r\n            number of units that you would like to order. Remember your name so\r\n            that you can track your orders in \"Your Orders\" page!\r\n          </DialogContentText>\r\n          <TextField\r\n            required\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Name\"\r\n            type=\"name\"\r\n            fullWidth\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n          <TextField\r\n            required\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"address\"\r\n            label=\"Address\"\r\n            type=\"address\"\r\n            fullWidth\r\n            onChange={(e) => setAddress(e.target.value)}\r\n          />\r\n          <div className={classes.unitsForm}>\r\n            <Typography color=\"textSecondary\">Units (In KG) *</Typography>\r\n            <div className={classes.sliderHolder}>\r\n              <Slider\r\n                className={classes.slider}\r\n                defaultValue={0}\r\n                value={typeof units === \"number\" ? units : 0}\r\n                onChange={handleSliderChange}\r\n                aria-labelledby=\"input-slider\"\r\n                min={0}\r\n                max={posting.units}\r\n                valueLabelDisplay=\"auto\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <Typography variant=\"h5\">\r\n              Total: ${units * posting.pricePerUnit}\r\n            </Typography>\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"secondary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleSubmit} color=\"primary\">\r\n            Place Order\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Snackbar\r\n        open={submitted}\r\n        autoHideDuration={3000}\r\n        onClose={handleAlertClose}\r\n      >\r\n        <Alert\r\n          className={classes.alert}\r\n          onClose={handleAlertClose}\r\n          severity=\"success\"\r\n        >\r\n          The order has been confirmed!\r\n        </Alert>\r\n      </Snackbar>\r\n      <Snackbar\r\n        open={noName || noAddress || noUnits}\r\n        autoHideDuration={3000}\r\n        onClose={handleAlertClose}\r\n      >\r\n        <Alert\r\n          className={classes.alert}\r\n          onClose={handleAlertClose}\r\n          severity=\"error\"\r\n        >\r\n          {getDisplayLabel()}\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}