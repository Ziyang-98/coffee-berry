{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\yang7\\\\OneDrive\\\\Documents\\\\GitHub\\\\coffeeberry\\\\frontend\\\\src\\\\Postings\\\\ManagePosting\\\\OrderRow.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Button from \"@material-ui/core/Button\";\nimport axios from \"axios\";\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    minWidth: 100\n  }\n}));\nexport default function OrderRow({\n  row,\n  name,\n  refresh\n}) {\n  _s();\n\n  const [status, setStatus] = React.useState(row.status);\n\n  const handleUpdate = async () => {\n    console.log(\"starting update\");\n    await axios.post(`http://localhost:9000//updateOrder/${row.Id}`, {\n      name: name,\n      postingId: row.postingId,\n      productName: row.productNam,\n      address: row.amount,\n      amount: row.amount,\n      status: status,\n      date: row.date\n    });\n    console.log(\"finish update\");\n    refresh();\n  };\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(TableRow, {\n    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n      children: row.date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      children: row.productName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      children: row.amount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        className: classes.formControl,\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          value: status,\n          onChange: e => setStatus(e.target.value),\n          displayEmpty: true,\n          className: classes.selectEmpty,\n          inputProps: {\n            \"aria-label\": \"Without label\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"pending\",\n            children: \"Pending\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"confirmed\",\n            children: \"Confirmed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"delivered\",\n            children: \"Delivered\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        onClick: handleUpdate,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, row.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(OrderRow, \"zDfRNP+Ssuem2P7yo3EYcEdnWNg=\", false, function () {\n  return [useStyles];\n});\n\n_c = OrderRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderRow\");","map":{"version":3,"sources":["C:/Users/yang7/OneDrive/Documents/GitHub/coffeeberry/frontend/src/Postings/ManagePosting/OrderRow.js"],"names":["React","makeStyles","TableCell","TableRow","MenuItem","FormControl","Select","Button","axios","useStyles","theme","formControl","minWidth","OrderRow","row","name","refresh","status","setStatus","useState","handleUpdate","console","log","post","Id","postingId","productName","productNam","address","amount","date","classes","e","target","value","selectEmpty","id"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    minWidth: 100,\r\n  },\r\n}));\r\n\r\nexport default function OrderRow({ row, name, refresh }) {\r\n  const [status, setStatus] = React.useState(row.status);\r\n\r\n  const handleUpdate = async () => {\r\n    console.log(\"starting update\");\r\n    await axios.post(`http://localhost:9000//updateOrder/${row.Id}`, {\r\n      name: name,\r\n      postingId: row.postingId,\r\n      productName: row.productNam,\r\n      address: row.amount,\r\n      amount: row.amount,\r\n      status: status,\r\n      date: row.date,\r\n    });\r\n    console.log(\"finish update\");\r\n    refresh();\r\n  };\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <TableRow key={row.id}>\r\n      <TableCell>{row.date}</TableCell>\r\n      <TableCell>{row.productName}</TableCell>\r\n      <TableCell>{row.amount}</TableCell>\r\n      <TableCell>\r\n        <FormControl className={classes.formControl}>\r\n          <Select\r\n            value={status}\r\n            onChange={(e) => setStatus(e.target.value)}\r\n            displayEmpty\r\n            className={classes.selectEmpty}\r\n            inputProps={{ \"aria-label\": \"Without label\" }}\r\n          >\r\n            <MenuItem value={\"pending\"}>Pending</MenuItem>\r\n            <MenuItem value={\"confirmed\"}>Confirmed</MenuItem>\r\n            <MenuItem value={\"delivered\"}>Delivered</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </TableCell>\r\n      <TableCell>\r\n        <Button color=\"primary\" onClick={handleUpdate}>\r\n          Update\r\n        </Button>\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}