{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\yang7\\\\OneDrive\\\\Documents\\\\GitHub\\\\coffeeberry\\\\frontend\\\\src\\\\Postings\\\\Postings.js\";\nimport React, { Component } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Grid from \"@material-ui/core/Grid\";\nimport SentimentVeryDissatisfiedIcon from \"@material-ui/icons/SentimentVeryDissatisfied\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\nimport axios from \"axios\";\n\nconst useStyles = theme => ({\n  icon: {\n    marginRight: theme.spacing(2)\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(4, 0, 4)\n  },\n  heroButtons: {\n    marginTop: theme.spacing(0)\n  },\n  emptyPage: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8)\n  },\n  buttonBase: {\n    height: \"100%\"\n  },\n  card: {\n    height: \"100%\",\n    width: theme.spacing(35),\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  cardMedia: {\n    paddingTop: \"56.25%\" // 16:9\n\n  },\n  cardContent: {\n    flexGrow: 1\n  },\n  price: {\n    margin: theme.spacing(0, 1),\n    fontWeight: 600,\n    color: \"#6F4E37\"\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6)\n  }\n});\n\nclass Postings extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: props.match.params.name,\n      postings: []\n    };\n  }\n\n  async componentDidMount() {\n    const userPostings = await axios.get(`http://localhost:9000/postings//postingsWithName/${this.state.name}`);\n    console.log(userPostings.data); // const inputName = this.state.name.toLowerCase();\n    // userPostings = userPostings.filter((posting) =>\n    //   posting.username.toLowerCase().match(inputName)\n    // );\n\n    this.setState({\n      postings: userPostings.data\n    });\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.heroContent,\n          children: /*#__PURE__*/_jsxDEV(Container, {\n            maxWidth: \"md\",\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              component: \"h1\",\n              variant: \"h3\",\n              align: \"center\",\n              color: \"textPrimary\",\n              gutterBottom: true,\n              children: [\"Hi \", this.state.name, \", here are your postings.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          className: classes.cardGrid,\n          maxWidth: \"md\",\n          children: [this.state.posting.length === 0 && /*#__PURE__*/_jsxDEV(Container, {\n            Container: true,\n            className: classes.emptyPage,\n            maxWidth: \"md\",\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              children: \"You have no postings available.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(SentimentVeryDissatisfiedIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), this.state.postings.length > 0 && /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 4,\n            children: this.state.postings.map(posting => /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              md: 4,\n              children: /*#__PURE__*/_jsxDEV(ButtonBase, {\n                className: classes.buttonBase,\n                onClick: event => {},\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  className: classes.card,\n                  children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n                    className: classes.cardMedia,\n                    image: posting.image,\n                    title: posting.nameOfProduct\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 124,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                    className: classes.cardContent,\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      gutterBottom: true,\n                      variant: \"h5\",\n                      component: \"h2\",\n                      children: posting.nameOfProduct\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 130,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      children: posting.description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 133,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"subtitle1\",\n                      component: \"h2\" //align=\"right\"\n                      ,\n                      className: classes.price,\n                      children: [\"$\", posting.pricePerUnit, \" per kg\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 136,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 21\n              }, this)\n            }, posting.postingId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default withStyles(useStyles)(Postings);","map":{"version":3,"sources":["C:/Users/yang7/OneDrive/Documents/GitHub/coffeeberry/frontend/src/Postings/Postings.js"],"names":["React","Component","Card","CardActions","CardContent","CardMedia","CssBaseline","Grid","SentimentVeryDissatisfiedIcon","Typography","withStyles","Container","ButtonBase","axios","useStyles","theme","icon","marginRight","spacing","heroContent","backgroundColor","palette","background","paper","padding","heroButtons","marginTop","emptyPage","paddingTop","paddingBottom","display","alignItems","justifyContent","cardGrid","buttonBase","height","card","width","flexDirection","cardMedia","cardContent","flexGrow","price","margin","fontWeight","color","footer","Postings","constructor","props","state","name","match","params","postings","componentDidMount","userPostings","get","console","log","data","setState","render","classes","posting","length","map","event","image","nameOfProduct","description","pricePerUnit","postingId"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport SentimentVeryDissatisfiedIcon from \"@material-ui/icons/SentimentVeryDissatisfied\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = (theme) => ({\r\n  icon: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  heroContent: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(4, 0, 4),\r\n  },\r\n  heroButtons: {\r\n    marginTop: theme.spacing(0),\r\n  },\r\n  emptyPage: {\r\n    paddingTop: theme.spacing(8),\r\n    paddingBottom: theme.spacing(8),\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  cardGrid: {\r\n    paddingTop: theme.spacing(8),\r\n    paddingBottom: theme.spacing(8),\r\n  },\r\n  buttonBase: {\r\n    height: \"100%\",\r\n  },\r\n  card: {\r\n    height: \"100%\",\r\n    width: theme.spacing(35),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  cardMedia: {\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n  },\r\n  price: {\r\n    margin: theme.spacing(0, 1),\r\n    fontWeight: 600,\r\n    color: \"#6F4E37\",\r\n  },\r\n  footer: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(6),\r\n  },\r\n});\r\n\r\nclass Postings extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      name: props.match.params.name,\r\n      postings: [],\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const userPostings = await axios.get(\r\n      `http://localhost:9000/postings//postingsWithName/${this.state.name}`\r\n    );\r\n    console.log(userPostings.data);\r\n    // const inputName = this.state.name.toLowerCase();\r\n    // userPostings = userPostings.filter((posting) =>\r\n    //   posting.username.toLowerCase().match(inputName)\r\n    // );\r\n    this.setState({ postings: userPostings.data });\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <CssBaseline />\r\n        <main>\r\n          {/* Hero unit */}\r\n          <div className={classes.heroContent}>\r\n            <Container maxWidth=\"md\">\r\n              <Typography\r\n                component=\"h1\"\r\n                variant=\"h3\"\r\n                align=\"center\"\r\n                color=\"textPrimary\"\r\n                gutterBottom\r\n              >\r\n                Hi {this.state.name}, here are your postings.\r\n              </Typography>\r\n            </Container>\r\n          </div>\r\n          <Container className={classes.cardGrid} maxWidth=\"md\">\r\n            {/* End hero unit */}\r\n            {this.state.posting.length === 0 && (\r\n              <Container Container className={classes.emptyPage} maxWidth=\"md\">\r\n                <Typography variant=\"h5\">\r\n                  You have no postings available.\r\n                </Typography>\r\n                <SentimentVeryDissatisfiedIcon />\r\n              </Container>\r\n            )}\r\n            {this.state.postings.length > 0 && (\r\n              <Grid container spacing={4}>\r\n                {this.state.postings.map((posting) => (\r\n                  <Grid item key={posting.postingId} xs={12} sm={6} md={4}>\r\n                    <ButtonBase\r\n                      className={classes.buttonBase}\r\n                      onClick={(event) => {}}\r\n                    >\r\n                      <Card className={classes.card}>\r\n                        <CardMedia\r\n                          className={classes.cardMedia}\r\n                          image={posting.image}\r\n                          title={posting.nameOfProduct}\r\n                        />\r\n                        <CardContent className={classes.cardContent}>\r\n                          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                            {posting.nameOfProduct}\r\n                          </Typography>\r\n                          <Typography>{posting.description}</Typography>\r\n                        </CardContent>\r\n                        <CardActions>\r\n                          <Typography\r\n                            variant=\"subtitle1\"\r\n                            component=\"h2\"\r\n                            //align=\"right\"\r\n                            className={classes.price}\r\n                          >\r\n                            ${posting.pricePerUnit} per kg\r\n                          </Typography>\r\n                        </CardActions>\r\n                      </Card>\r\n                    </ButtonBase>\r\n                  </Grid>\r\n                ))}\r\n              </Grid>\r\n            )}\r\n          </Container>\r\n        </main>\r\n        {/* Footer */}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(Postings);\r\n"]},"metadata":{},"sourceType":"module"}