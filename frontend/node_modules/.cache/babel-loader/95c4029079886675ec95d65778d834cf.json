{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\yang7\\\\OneDrive\\\\Documents\\\\GitHub\\\\coffeeberry\\\\frontend\\\\src\\\\Postings\\\\ManagePosting\\\\OrderRow.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Button from \"@material-ui/core/Button\";\nimport axios from \"axios\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    minWidth: 100\n  },\n  alert: {\n    marginBottom: theme.spacing(2)\n  }\n}));\n\nfunction Alert(props) {\n  return /*#__PURE__*/_jsxDEV(MuiAlert, {\n    elevation: 6,\n    variant: \"filled\",\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 10\n  }, this);\n}\n\n_c = Alert;\nexport default function OrderRow({\n  row,\n  refresh\n}) {\n  _s();\n\n  const [status, setStatus] = React.useState(row.status);\n  const [updated, setUpdated] = React.useState(false);\n\n  const handleUpdate = async () => {\n    console.log(row.orderId);\n    await axios.post(`http://localhost:9000/orders/updateOrder/${row.orderId}`, {\n      orderId: row.orderId,\n      name: row.name,\n      postingId: row.postingId,\n      productName: row.productName,\n      address: row.amount,\n      amount: row.amount,\n      status: status,\n      date: row.date\n    });\n    setUpdated(true);\n    refresh();\n  };\n\n  const handleAlertClose = () => {\n    setUpdated(false);\n  };\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(TableRow, {\n    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n      children: row.date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      children: row.productName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      children: row.amount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        className: classes.formControl,\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          value: status,\n          onChange: e => setStatus(e.target.value),\n          displayEmpty: true,\n          className: classes.selectEmpty,\n          inputProps: {\n            \"aria-label\": \"Without label\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"pending\",\n            children: \"Pending\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"confirmed\",\n            children: \"Confirmed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"delivered\",\n            children: \"Delivered\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        onClick: handleUpdate,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: updated,\n      autoHideDuration: 3000,\n      onClose: handleAlertClose,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        className: classes.alert,\n        onClose: handleAlertClose,\n        severity: \"success\",\n        children: \"Order status is updated successfully.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, row.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(OrderRow, \"lUxStZyg/R6lVchkTQjYZOAcEww=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = OrderRow;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Alert\");\n$RefreshReg$(_c2, \"OrderRow\");","map":{"version":3,"sources":["C:/Users/yang7/OneDrive/Documents/GitHub/coffeeberry/frontend/src/Postings/ManagePosting/OrderRow.js"],"names":["React","makeStyles","TableCell","TableRow","MenuItem","FormControl","Select","Button","axios","Snackbar","MuiAlert","useStyles","theme","formControl","minWidth","alert","marginBottom","spacing","Alert","props","OrderRow","row","refresh","status","setStatus","useState","updated","setUpdated","handleUpdate","console","log","orderId","post","name","postingId","productName","address","amount","date","handleAlertClose","classes","e","target","value","selectEmpty","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AAEA,MAAMC,SAAS,GAAGV,UAAU,CAAEW,KAAD,KAAY;AACvCC,EAAAA,WAAW,EAAE;AACXC,IAAAA,QAAQ,EAAE;AADC,GAD0B;AAIvCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,YAAY,EAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd;AADT;AAJgC,CAAZ,CAAD,CAA5B;;AASA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACpB,sBAAO,QAAC,QAAD;AAAU,IAAA,SAAS,EAAE,CAArB;AAAwB,IAAA,OAAO,EAAC,QAAhC;AAAA,OAA6CA;AAA7C;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;KAFQD,K;AAIT,eAAe,SAASE,QAAT,CAAkB;AAAEC,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAAlB,EAAoC;AAAA;;AACjD,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBxB,KAAK,CAACyB,QAAN,CAAeJ,GAAG,CAACE,MAAnB,CAA5B;AACA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwB3B,KAAK,CAACyB,QAAN,CAAe,KAAf,CAA9B;;AAEA,QAAMG,YAAY,GAAG,YAAY;AAC/BC,IAAAA,OAAO,CAACC,GAAR,CAAYT,GAAG,CAACU,OAAhB;AACA,UAAMvB,KAAK,CAACwB,IAAN,CACH,4CAA2CX,GAAG,CAACU,OAAQ,EADpD,EAEJ;AACEA,MAAAA,OAAO,EAAEV,GAAG,CAACU,OADf;AAEEE,MAAAA,IAAI,EAAEZ,GAAG,CAACY,IAFZ;AAGEC,MAAAA,SAAS,EAAEb,GAAG,CAACa,SAHjB;AAIEC,MAAAA,WAAW,EAAEd,GAAG,CAACc,WAJnB;AAKEC,MAAAA,OAAO,EAAEf,GAAG,CAACgB,MALf;AAMEA,MAAAA,MAAM,EAAEhB,GAAG,CAACgB,MANd;AAOEd,MAAAA,MAAM,EAAEA,MAPV;AAQEe,MAAAA,IAAI,EAAEjB,GAAG,CAACiB;AARZ,KAFI,CAAN;AAaAX,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAL,IAAAA,OAAO;AACR,GAjBD;;AAmBA,QAAMiB,gBAAgB,GAAG,MAAM;AAC7BZ,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAFD;;AAIA,QAAMa,OAAO,GAAG7B,SAAS,EAAzB;AACA,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,SAAD;AAAA,gBAAYU,GAAG,CAACiB;AAAhB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAA,gBAAYjB,GAAG,CAACc;AAAhB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,SAAD;AAAA,gBAAYd,GAAG,CAACgB;AAAhB;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,SAAD;AAAA,6BACE,QAAC,WAAD;AAAa,QAAA,SAAS,EAAEG,OAAO,CAAC3B,WAAhC;AAAA,+BACE,QAAC,MAAD;AACE,UAAA,KAAK,EAAEU,MADT;AAEE,UAAA,QAAQ,EAAGkB,CAAD,IAAOjB,SAAS,CAACiB,CAAC,CAACC,MAAF,CAASC,KAAV,CAF5B;AAGE,UAAA,YAAY,MAHd;AAIE,UAAA,SAAS,EAAEH,OAAO,CAACI,WAJrB;AAKE,UAAA,UAAU,EAAE;AAAE,0BAAc;AAAhB,WALd;AAAA,kCAOE,QAAC,QAAD;AAAU,YAAA,KAAK,EAAE,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF,eAQE,QAAC,QAAD;AAAU,YAAA,KAAK,EAAE,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARF,eASE,QAAC,QAAD;AAAU,YAAA,KAAK,EAAE,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF,eAmBE,QAAC,SAAD;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAwB,QAAA,OAAO,EAAEhB,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAnBF,eAwBE,QAAC,QAAD;AACE,MAAA,IAAI,EAAEF,OADR;AAEE,MAAA,gBAAgB,EAAE,IAFpB;AAGE,MAAA,OAAO,EAAEa,gBAHX;AAAA,6BAKE,QAAC,KAAD;AACE,QAAA,SAAS,EAAEC,OAAO,CAACzB,KADrB;AAEE,QAAA,OAAO,EAAEwB,gBAFX;AAGE,QAAA,QAAQ,EAAC,SAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,YAxBF;AAAA,KAAelB,GAAG,CAACwB,EAAnB;AAAA;AAAA;AAAA;AAAA,UADF;AAwCD;;GApEuBzB,Q;UA2BNT,S;;;MA3BMS,Q","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport axios from \"axios\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    minWidth: 100,\r\n  },\r\n  alert: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nexport default function OrderRow({ row, refresh }) {\r\n  const [status, setStatus] = React.useState(row.status);\r\n  const [updated, setUpdated] = React.useState(false);\r\n\r\n  const handleUpdate = async () => {\r\n    console.log(row.orderId);\r\n    await axios.post(\r\n      `http://localhost:9000/orders/updateOrder/${row.orderId}`,\r\n      {\r\n        orderId: row.orderId,\r\n        name: row.name,\r\n        postingId: row.postingId,\r\n        productName: row.productName,\r\n        address: row.amount,\r\n        amount: row.amount,\r\n        status: status,\r\n        date: row.date,\r\n      }\r\n    );\r\n    setUpdated(true);\r\n    refresh();\r\n  };\r\n\r\n  const handleAlertClose = () => {\r\n    setUpdated(false);\r\n  };\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <TableRow key={row.id}>\r\n      <TableCell>{row.date}</TableCell>\r\n      <TableCell>{row.productName}</TableCell>\r\n      <TableCell>{row.amount}</TableCell>\r\n      <TableCell>\r\n        <FormControl className={classes.formControl}>\r\n          <Select\r\n            value={status}\r\n            onChange={(e) => setStatus(e.target.value)}\r\n            displayEmpty\r\n            className={classes.selectEmpty}\r\n            inputProps={{ \"aria-label\": \"Without label\" }}\r\n          >\r\n            <MenuItem value={\"pending\"}>Pending</MenuItem>\r\n            <MenuItem value={\"confirmed\"}>Confirmed</MenuItem>\r\n            <MenuItem value={\"delivered\"}>Delivered</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </TableCell>\r\n      <TableCell>\r\n        <Button color=\"primary\" onClick={handleUpdate}>\r\n          Update\r\n        </Button>\r\n      </TableCell>\r\n      <Snackbar\r\n        open={updated}\r\n        autoHideDuration={3000}\r\n        onClose={handleAlertClose}\r\n      >\r\n        <Alert\r\n          className={classes.alert}\r\n          onClose={handleAlertClose}\r\n          severity=\"success\"\r\n        >\r\n          Order status is updated successfully.\r\n        </Alert>\r\n      </Snackbar>\r\n    </TableRow>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}