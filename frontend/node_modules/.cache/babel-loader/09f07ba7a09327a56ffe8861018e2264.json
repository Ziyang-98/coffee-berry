{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\yang7\\\\OneDrive\\\\Documents\\\\GitHub\\\\coffeeberry\\\\frontend\\\\src\\\\Market\\\\PostingShowcase\\\\Posting.js\";\nimport React, { Component } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Divider from \"@material-ui/core/Divider\";\nimport OrderButton from \"./OrderButton\";\nimport axios from \"axios\";\n\nconst useStyles = theme => ({\n  root: {\n    display: \"flex\",\n    height: theme.spacing(65),\n    margin: theme.spacing(10, 0),\n    backgroundColor: theme.palette.background.paper\n  },\n  image: {\n    width: theme.spacing(60),\n    height: theme.spacing(40),\n    marginBottom: theme.spacing(5)\n  },\n  details: {\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  content: {\n    flex: \"1 0 auto\"\n  },\n  imageHolder: {\n    width: \"45%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  controls: {\n    display: \"flex\",\n    alignItems: \"center\",\n    paddingLeft: theme.spacing(1),\n    paddingBottom: theme.spacing(1)\n  },\n  detailsHolder: {\n    margin: theme.spacing(7, 0, 5, 0)\n  },\n  price: {\n    margin: theme.spacing(2, 0),\n    fontWeight: 600,\n    color: \"#6F4E37\"\n  },\n  units: {\n    margin: theme.spacing(2, 2),\n    fontWeight: 600,\n    color: \"#6F4E37\"\n  },\n  description: {\n    margin: theme.spacing(2, 0)\n  },\n  actions: {\n    margin: theme.spacing(5, 0, 0, 0) //bottom: 0,\n\n  },\n  button: {\n    margin: theme.spacing(10, 0, 0, 0),\n    bottom: 0\n  }\n});\n\nclass Posting extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      postingId: props.match.params.postingId,\n      posting: {} // basePostings.find((posting) =>\n      //   String(posting.postingId).match(props.match.params.postingId)\n      // ),\n\n    };\n  }\n\n  async componentDidMount() {\n    const posting = await axios.get(`http://localhost:9000/postings/postingWithId/${postingId}`);\n    console.log(posting);\n    this.setState({\n      posting: posting\n    });\n  }\n\n  postOrder(posting, name, address, units) {\n    console.log(posting, name, address, units);\n  }\n\n  render() {\n    const posting = this.state.posting;\n    const {\n      classes\n    } = this.props;\n    let tagString = \"\";\n\n    if (posting.tags.beanType) {\n      tagString = tagString.concat(posting.tags.beanType + \", \");\n    }\n\n    if (posting.tags.roastLevel) {\n      tagString = tagString.concat(posting.tags.roastLevel + \", \");\n    }\n\n    if (posting.tags.organic) {\n      tagString = tagString.concat(\"organic\");\n    }\n\n    if (tagString.endsWith(\", \")) {\n      tagString = tagString.slice(0, -2);\n    }\n\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"lg\",\n        className: classes.container,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: classes.root,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.imageHolder,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: classes.image,\n              style: {\n                display: posting.image\n              },\n              src: posting.image,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            className: classes.content,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.detailsHolder,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                component: \"h3\",\n                variant: \"h4\",\n                children: posting.nameOfProduct\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                color: \"textSecondary\",\n                children: [\"Posted by \", posting.username]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                color: \"textSecondary\",\n                children: [\"Tags: \", tagString]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h5\",\n                  component: \"span\",\n                  className: classes.price,\n                  children: [\"$\", posting.pricePerUnit, \" Per Kg\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h5\",\n                  component: \"span\",\n                  className: classes.units,\n                  children: [posting.units, \"kg left\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.description,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle1\",\n                  children: posting.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(OrderButton, {\n              posting: posting,\n              postOrder: this.postOrder.bind(this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default withStyles(useStyles)(Posting);","map":{"version":3,"sources":["C:/Users/yang7/OneDrive/Documents/GitHub/coffeeberry/frontend/src/Market/PostingShowcase/Posting.js"],"names":["React","Component","withStyles","Container","Card","CardContent","Typography","CssBaseline","Divider","OrderButton","axios","useStyles","theme","root","display","height","spacing","margin","backgroundColor","palette","background","paper","image","width","marginBottom","details","flexDirection","content","flex","imageHolder","justifyContent","alignItems","controls","paddingLeft","paddingBottom","detailsHolder","price","fontWeight","color","units","description","actions","button","bottom","Posting","constructor","props","state","postingId","match","params","posting","componentDidMount","get","console","log","setState","postOrder","name","address","render","classes","tagString","tags","beanType","concat","roastLevel","organic","endsWith","slice","container","nameOfProduct","username","pricePerUnit","bind"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,SAAS,GAAIC,KAAD,KAAY;AAC5BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,MAAM,EAAEH,KAAK,CAACI,OAAN,CAAc,EAAd,CAFJ;AAGJC,IAAAA,MAAM,EAAEL,KAAK,CAACI,OAAN,CAAc,EAAd,EAAkB,CAAlB,CAHJ;AAIJE,IAAAA,eAAe,EAAEN,KAAK,CAACO,OAAN,CAAcC,UAAd,CAAyBC;AAJtC,GADsB;AAO5BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAEX,KAAK,CAACI,OAAN,CAAc,EAAd,CADF;AAELD,IAAAA,MAAM,EAAEH,KAAK,CAACI,OAAN,CAAc,EAAd,CAFH;AAGLQ,IAAAA,YAAY,EAAEZ,KAAK,CAACI,OAAN,CAAc,CAAd;AAHT,GAPqB;AAY5BS,EAAAA,OAAO,EAAE;AACPX,IAAAA,OAAO,EAAE,MADF;AAEPY,IAAAA,aAAa,EAAE;AAFR,GAZmB;AAgB5BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,IAAI,EAAE;AADC,GAhBmB;AAmB5BC,EAAAA,WAAW,EAAE;AACXN,IAAAA,KAAK,EAAE,KADI;AAEXT,IAAAA,OAAO,EAAE,MAFE;AAGXgB,IAAAA,cAAc,EAAE,QAHL;AAIXC,IAAAA,UAAU,EAAE;AAJD,GAnBe;AAyB5BC,EAAAA,QAAQ,EAAE;AACRlB,IAAAA,OAAO,EAAE,MADD;AAERiB,IAAAA,UAAU,EAAE,QAFJ;AAGRE,IAAAA,WAAW,EAAErB,KAAK,CAACI,OAAN,CAAc,CAAd,CAHL;AAIRkB,IAAAA,aAAa,EAAEtB,KAAK,CAACI,OAAN,CAAc,CAAd;AAJP,GAzBkB;AAgC5BmB,EAAAA,aAAa,EAAE;AACblB,IAAAA,MAAM,EAAEL,KAAK,CAACI,OAAN,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB;AADK,GAhCa;AAmC5BoB,EAAAA,KAAK,EAAE;AACLnB,IAAAA,MAAM,EAAEL,KAAK,CAACI,OAAN,CAAc,CAAd,EAAiB,CAAjB,CADH;AAELqB,IAAAA,UAAU,EAAE,GAFP;AAGLC,IAAAA,KAAK,EAAE;AAHF,GAnCqB;AAwC5BC,EAAAA,KAAK,EAAE;AACLtB,IAAAA,MAAM,EAAEL,KAAK,CAACI,OAAN,CAAc,CAAd,EAAiB,CAAjB,CADH;AAELqB,IAAAA,UAAU,EAAE,GAFP;AAGLC,IAAAA,KAAK,EAAE;AAHF,GAxCqB;AA6C5BE,EAAAA,WAAW,EAAE;AACXvB,IAAAA,MAAM,EAAEL,KAAK,CAACI,OAAN,CAAc,CAAd,EAAiB,CAAjB;AADG,GA7Ce;AAgD5ByB,EAAAA,OAAO,EAAE;AACPxB,IAAAA,MAAM,EAAEL,KAAK,CAACI,OAAN,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,CADD,CAEP;;AAFO,GAhDmB;AAoD5B0B,EAAAA,MAAM,EAAE;AACNzB,IAAAA,MAAM,EAAEL,KAAK,CAACI,OAAN,CAAc,EAAd,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB,CADF;AAEN2B,IAAAA,MAAM,EAAE;AAFF;AApDoB,CAAZ,CAAlB;;AA0DA,MAAMC,OAAN,SAAsB3C,SAAtB,CAAgC;AAC9B4C,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAEF,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAmBF,SADnB;AAEXG,MAAAA,OAAO,EAAE,EAFE,CAGX;AACA;AACA;;AALW,KAAb;AAOD;;AAED,QAAMC,iBAAN,GAA0B;AACxB,UAAMD,OAAO,GAAG,MAAMzC,KAAK,CAAC2C,GAAN,CACnB,gDAA+CL,SAAU,EADtC,CAAtB;AAGAM,IAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACA,SAAKK,QAAL,CAAc;AACZL,MAAAA,OAAO,EAAEA;AADG,KAAd;AAGD;;AAEDM,EAAAA,SAAS,CAACN,OAAD,EAAUO,IAAV,EAAgBC,OAAhB,EAAyBpB,KAAzB,EAAgC;AACvCe,IAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ,EAAqBO,IAArB,EAA2BC,OAA3B,EAAoCpB,KAApC;AACD;;AAEDqB,EAAAA,MAAM,GAAG;AACP,UAAMT,OAAO,GAAG,KAAKJ,KAAL,CAAWI,OAA3B;AACA,UAAM;AAAEU,MAAAA;AAAF,QAAc,KAAKf,KAAzB;AACA,QAAIgB,SAAS,GAAG,EAAhB;;AACA,QAAIX,OAAO,CAACY,IAAR,CAAaC,QAAjB,EAA2B;AACzBF,MAAAA,SAAS,GAAGA,SAAS,CAACG,MAAV,CAAiBd,OAAO,CAACY,IAAR,CAAaC,QAAb,GAAwB,IAAzC,CAAZ;AACD;;AAED,QAAIb,OAAO,CAACY,IAAR,CAAaG,UAAjB,EAA6B;AAC3BJ,MAAAA,SAAS,GAAGA,SAAS,CAACG,MAAV,CAAiBd,OAAO,CAACY,IAAR,CAAaG,UAAb,GAA0B,IAA3C,CAAZ;AACD;;AAED,QAAIf,OAAO,CAACY,IAAR,CAAaI,OAAjB,EAA0B;AACxBL,MAAAA,SAAS,GAAGA,SAAS,CAACG,MAAV,CAAiB,SAAjB,CAAZ;AACD;;AAED,QAAIH,SAAS,CAACM,QAAV,CAAmB,IAAnB,CAAJ,EAA8B;AAC5BN,MAAAA,SAAS,GAAGA,SAAS,CAACO,KAAV,CAAgB,CAAhB,EAAmB,CAAC,CAApB,CAAZ;AACD;;AACD,wBACE,QAAC,KAAD,CAAO,QAAP;AAAA,8BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,SAAD;AAAW,QAAA,QAAQ,EAAC,IAApB;AAAyB,QAAA,SAAS,EAAER,OAAO,CAACS,SAA5C;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,SAAS,EAAET,OAAO,CAAChD,IAAzB;AAAA,kCACE;AAAK,YAAA,SAAS,EAAEgD,OAAO,CAAChC,WAAxB;AAAA,mCACE;AACE,cAAA,SAAS,EAAEgC,OAAO,CAACvC,KADrB;AAEE,cAAA,KAAK,EAAE;AAAER,gBAAAA,OAAO,EAAEqC,OAAO,CAAC7B;AAAnB,eAFT;AAGE,cAAA,GAAG,EAAE6B,OAAO,CAAC7B,KAHf;AAIE,cAAA,GAAG,EAAC;AAJN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eASE,QAAC,WAAD;AAAa,YAAA,SAAS,EAAEuC,OAAO,CAAClC,OAAhC;AAAA,oCACE;AAAK,cAAA,SAAS,EAAEkC,OAAO,CAAC1B,aAAxB;AAAA,sCACE,QAAC,UAAD;AAAY,gBAAA,SAAS,EAAC,IAAtB;AAA2B,gBAAA,OAAO,EAAC,IAAnC;AAAA,0BACGgB,OAAO,CAACoB;AADX;AAAA;AAAA;AAAA;AAAA,sBADF,eAIE,QAAC,UAAD;AAAY,gBAAA,OAAO,EAAC,WAApB;AAAgC,gBAAA,KAAK,EAAC,eAAtC;AAAA,yCACapB,OAAO,CAACqB,QADrB;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF,eAOE,QAAC,UAAD;AAAY,gBAAA,OAAO,EAAC,WAApB;AAAgC,gBAAA,KAAK,EAAC,eAAtC;AAAA,qCACSV,SADT;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPF,eAUE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,sBAVF,eAWE;AAAA,wCACE,QAAC,UAAD;AACE,kBAAA,OAAO,EAAC,IADV;AAEE,kBAAA,SAAS,EAAC,MAFZ;AAGE,kBAAA,SAAS,EAAED,OAAO,CAACzB,KAHrB;AAAA,kCAKIe,OAAO,CAACsB,YALZ;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAQE,QAAC,UAAD;AACE,kBAAA,OAAO,EAAC,IADV;AAEE,kBAAA,SAAS,EAAC,MAFZ;AAGE,kBAAA,SAAS,EAAEZ,OAAO,CAACtB,KAHrB;AAAA,6BAKGY,OAAO,CAACZ,KALX;AAAA;AAAA;AAAA;AAAA;AAAA,wBARF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAXF,eA2BE;AAAK,gBAAA,SAAS,EAAEsB,OAAO,CAACrB,WAAxB;AAAA,uCACE,QAAC,UAAD;AAAY,kBAAA,OAAO,EAAC,WAApB;AAAA,4BACGW,OAAO,CAACX;AADX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBA3BF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAkCE,QAAC,WAAD;AACE,cAAA,OAAO,EAAEW,OADX;AAEE,cAAA,SAAS,EAAE,KAAKM,SAAL,CAAeiB,IAAf,CAAoB,IAApB;AAFb;AAAA;AAAA;AAAA;AAAA,oBAlCF;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAwDD;;AAtG6B;;AAyGhC,eAAexE,UAAU,CAACS,SAAD,CAAV,CAAsBiC,OAAtB,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport OrderButton from \"./OrderButton\";\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = (theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    height: theme.spacing(65),\r\n    margin: theme.spacing(10, 0),\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  image: {\r\n    width: theme.spacing(60),\r\n    height: theme.spacing(40),\r\n    marginBottom: theme.spacing(5),\r\n  },\r\n  details: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  content: {\r\n    flex: \"1 0 auto\",\r\n  },\r\n  imageHolder: {\r\n    width: \"45%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  controls: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    paddingLeft: theme.spacing(1),\r\n    paddingBottom: theme.spacing(1),\r\n  },\r\n\r\n  detailsHolder: {\r\n    margin: theme.spacing(7, 0, 5, 0),\r\n  },\r\n  price: {\r\n    margin: theme.spacing(2, 0),\r\n    fontWeight: 600,\r\n    color: \"#6F4E37\",\r\n  },\r\n  units: {\r\n    margin: theme.spacing(2, 2),\r\n    fontWeight: 600,\r\n    color: \"#6F4E37\",\r\n  },\r\n  description: {\r\n    margin: theme.spacing(2, 0),\r\n  },\r\n  actions: {\r\n    margin: theme.spacing(5, 0, 0, 0),\r\n    //bottom: 0,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(10, 0, 0, 0),\r\n    bottom: 0,\r\n  },\r\n});\r\n\r\nclass Posting extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      postingId: props.match.params.postingId,\r\n      posting: {},\r\n      // basePostings.find((posting) =>\r\n      //   String(posting.postingId).match(props.match.params.postingId)\r\n      // ),\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const posting = await axios.get(\r\n      `http://localhost:9000/postings/postingWithId/${postingId}`\r\n    );\r\n    console.log(posting);\r\n    this.setState({\r\n      posting: posting,\r\n    });\r\n  }\r\n\r\n  postOrder(posting, name, address, units) {\r\n    console.log(posting, name, address, units);\r\n  }\r\n\r\n  render() {\r\n    const posting = this.state.posting;\r\n    const { classes } = this.props;\r\n    let tagString = \"\";\r\n    if (posting.tags.beanType) {\r\n      tagString = tagString.concat(posting.tags.beanType + \", \");\r\n    }\r\n\r\n    if (posting.tags.roastLevel) {\r\n      tagString = tagString.concat(posting.tags.roastLevel + \", \");\r\n    }\r\n\r\n    if (posting.tags.organic) {\r\n      tagString = tagString.concat(\"organic\");\r\n    }\r\n\r\n    if (tagString.endsWith(\", \")) {\r\n      tagString = tagString.slice(0, -2);\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        <CssBaseline />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Card className={classes.root}>\r\n            <div className={classes.imageHolder}>\r\n              <img\r\n                className={classes.image}\r\n                style={{ display: posting.image }}\r\n                src={posting.image}\r\n                alt=\"\"\r\n              />\r\n            </div>\r\n            <CardContent className={classes.content}>\r\n              <div className={classes.detailsHolder}>\r\n                <Typography component=\"h3\" variant=\"h4\">\r\n                  {posting.nameOfProduct}\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                  Posted by {posting.username}\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                  Tags: {tagString}\r\n                </Typography>\r\n                <Divider />\r\n                <div>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    component=\"span\"\r\n                    className={classes.price}\r\n                  >\r\n                    ${posting.pricePerUnit} Per Kg\r\n                  </Typography>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    component=\"span\"\r\n                    className={classes.units}\r\n                  >\r\n                    {posting.units}kg left\r\n                  </Typography>\r\n                </div>\r\n                <div className={classes.description}>\r\n                  <Typography variant=\"subtitle1\">\r\n                    {posting.description}\r\n                  </Typography>\r\n                </div>\r\n              </div>\r\n              <OrderButton\r\n                posting={posting}\r\n                postOrder={this.postOrder.bind(this)}\r\n              />\r\n            </CardContent>\r\n          </Card>\r\n        </Container>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(Posting);\r\n"]},"metadata":{},"sourceType":"module"}