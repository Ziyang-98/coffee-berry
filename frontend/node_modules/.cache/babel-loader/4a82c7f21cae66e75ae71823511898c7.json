{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\yang7\\\\OneDrive\\\\Documents\\\\GitHub\\\\coffeeberry\\\\frontend\\\\src\\\\Market\\\\PostingShowcase\\\\OrderDialog.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Slider from \"@material-ui/core/Slider\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles(theme => ({\n  unitsForm: {\n    margin: theme.spacing(2, 0)\n  },\n  sliderHolder: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  slider: {\n    width: theme.spacing(30)\n  },\n  alert: {\n    marginBottom: theme.spacing(2)\n  }\n}));\n\nfunction Alert(props) {\n  return /*#__PURE__*/_jsxDEV(MuiAlert, {\n    elevation: 6,\n    variant: \"filled\",\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 10\n  }, this);\n}\n\n_c = Alert;\nexport default function OrderDialog({\n  posting,\n  open,\n  handleClose,\n  postOrder\n}) {\n  _s();\n\n  const classes = useStyles();\n  const [name, setName] = React.useState(\"\");\n  const [address, setAddress] = React.useState(\"\");\n  const [units, setUnits] = React.useState(0);\n  const [image, setImage] = React.useState(\"\");\n\n  const handleSliderChange = (event, newValue) => {\n    setUnits(newValue);\n  };\n\n  const handleSubmit = () => {\n    if (name === \"\") {\n      handleNoName();\n    }\n\n    if (address === \"\") {\n      handleNoAddress();\n    }\n\n    if (units === 0) {\n      handleNoUnits();\n    }\n\n    if (!(name === \"\" || address === \"\" || units === 0)) {\n      console.log(\"All details are present\");\n      postOrder(posting, name, address, image, units);\n      setName(\"\");\n      setAddress(\"\");\n      setImage(\"\");\n      setUnits(0);\n      handleClose();\n    }\n  };\n  /*----Alert Conditions----*/\n\n\n  const [noName, setNoName] = React.useState(false);\n  const [noAddress, setNoAddress] = React.useState(false);\n  const [noUnits, setNoUnits] = React.useState(false);\n  /*----Handle Alerts----*/\n\n  const handleNoName = () => {\n    setNoName(true);\n  };\n\n  const handleNoAddress = () => {\n    setNoAddress(true);\n  };\n\n  const handleNoUnits = () => {\n    setNoUnits(true);\n  };\n\n  const handleAlertClose = () => {\n    setNoName(false);\n    setNoAddress(false);\n    setNoUnits(false);\n  };\n\n  const getDisplayLabel = () => {\n    if (noName || noAddress || noUnits) {\n      return noName && noAddress && noUnits ? \"Please enter your name, address and the number of units you would like to purchase.\" : noName && noAddress ? \"Please enter your name and address.\" : noName && noUnits ? \"Please enter your name and the number of units you would like to purchase.\" : noName ? \"Please enter your name.\" : noAddress && noUnits ? \"Please enter your address and the number of units you would like to purchase.\" : noAddress ? \"Please enter your address\" : \"Please enter the number of units you would like to purchase.\";\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"form-dialog-title\",\n      maxWidth: \"xs\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"form-dialog-title\",\n        children: \"Order Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"Please enter your name, address, the link of your product image and number of units that you would like to order.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          autoFocus: true,\n          margin: \"dense\",\n          id: \"name\",\n          label: \"*Name\",\n          type: \"name\",\n          fullWidth: true,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          autoFocus: true,\n          margin: \"dense\",\n          id: \"address\",\n          label: \"*Address\",\n          type: \"address\",\n          fullWidth: true,\n          onChange: e => setAddress(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          autoFocus: true,\n          margin: \"dense\",\n          id: \"imageLink\",\n          label: \"Link of your product\",\n          type: \"imageLink\",\n          fullWidth: true,\n          onChange: e => setImage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.unitsForm,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textSecondary\",\n            children: \"*Units (In KG)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.sliderHolder,\n            children: /*#__PURE__*/_jsxDEV(Slider, {\n              className: classes.slider,\n              defaultValue: 0,\n              value: typeof units === \"number\" ? units : 0,\n              onChange: handleSliderChange,\n              \"aria-labelledby\": \"input-slider\",\n              min: 0,\n              max: posting.units,\n              valueLabelDisplay: \"auto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          color: \"secondary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSubmit,\n          color: \"primary\",\n          children: \"Place Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: noName || noAddress || noUnits,\n      autoHideDuration: 3000,\n      onClose: handleAlertClose,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        className: classes.alert,\n        onClose: handleAlertClose,\n        severity: \"error\",\n        children: getDisplayLabel()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n\n_s(OrderDialog, \"bqqx7lOVFsrKPI62wBbvPu/ClQo=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = OrderDialog;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Alert\");\n$RefreshReg$(_c2, \"OrderDialog\");","map":{"version":3,"sources":["C:/Users/yang7/OneDrive/Documents/GitHub/coffeeberry/frontend/src/Market/PostingShowcase/OrderDialog.js"],"names":["React","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Typography","Slider","Snackbar","MuiAlert","makeStyles","useStyles","theme","unitsForm","margin","spacing","sliderHolder","display","justifyContent","alignItems","slider","width","alert","marginBottom","Alert","props","OrderDialog","posting","open","handleClose","postOrder","classes","name","setName","useState","address","setAddress","units","setUnits","image","setImage","handleSliderChange","event","newValue","handleSubmit","handleNoName","handleNoAddress","handleNoUnits","console","log","noName","setNoName","noAddress","setNoAddress","noUnits","setNoUnits","handleAlertClose","getDisplayLabel","e","target","value"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  unitsForm: {\r\n    margin: theme.spacing(2, 0),\r\n  },\r\n  sliderHolder: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  slider: {\r\n    width: theme.spacing(30),\r\n  },\r\n  alert: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nexport default function OrderDialog({ posting, open, handleClose, postOrder }) {\r\n  const classes = useStyles();\r\n\r\n  const [name, setName] = React.useState(\"\");\r\n  const [address, setAddress] = React.useState(\"\");\r\n  const [units, setUnits] = React.useState(0);\r\n  const [image, setImage] = React.useState(\"\");\r\n\r\n  const handleSliderChange = (event, newValue) => {\r\n    setUnits(newValue);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (name === \"\") {\r\n      handleNoName();\r\n    }\r\n\r\n    if (address === \"\") {\r\n      handleNoAddress();\r\n    }\r\n\r\n    if (units === 0) {\r\n      handleNoUnits();\r\n    }\r\n\r\n    if (!(name === \"\" || address === \"\" || units === 0)) {\r\n      console.log(\"All details are present\");\r\n      postOrder(posting, name, address, image, units);\r\n      setName(\"\");\r\n      setAddress(\"\");\r\n      setImage(\"\");\r\n      setUnits(0);\r\n      handleClose();\r\n    }\r\n  };\r\n  /*----Alert Conditions----*/\r\n  const [noName, setNoName] = React.useState(false);\r\n  const [noAddress, setNoAddress] = React.useState(false);\r\n  const [noUnits, setNoUnits] = React.useState(false);\r\n\r\n  /*----Handle Alerts----*/\r\n  const handleNoName = () => {\r\n    setNoName(true);\r\n  };\r\n\r\n  const handleNoAddress = () => {\r\n    setNoAddress(true);\r\n  };\r\n\r\n  const handleNoUnits = () => {\r\n    setNoUnits(true);\r\n  };\r\n\r\n  const handleAlertClose = () => {\r\n    setNoName(false);\r\n    setNoAddress(false);\r\n    setNoUnits(false);\r\n  };\r\n\r\n  const getDisplayLabel = () => {\r\n    if (noName || noAddress || noUnits) {\r\n      return noName && noAddress && noUnits\r\n        ? \"Please enter your name, address and the number of units you would like to purchase.\"\r\n        : noName && noAddress\r\n        ? \"Please enter your name and address.\"\r\n        : noName && noUnits\r\n        ? \"Please enter your name and the number of units you would like to purchase.\"\r\n        : noName\r\n        ? \"Please enter your name.\"\r\n        : noAddress && noUnits\r\n        ? \"Please enter your address and the number of units you would like to purchase.\"\r\n        : noAddress\r\n        ? \"Please enter your address\"\r\n        : \"Please enter the number of units you would like to purchase.\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        maxWidth=\"xs\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Order Form</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Please enter your name, address, the link of your product image and\r\n            number of units that you would like to order.\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"*Name\"\r\n            type=\"name\"\r\n            fullWidth\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"address\"\r\n            label=\"*Address\"\r\n            type=\"address\"\r\n            fullWidth\r\n            onChange={(e) => setAddress(e.target.value)}\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"imageLink\"\r\n            label=\"Link of your product\"\r\n            type=\"imageLink\"\r\n            fullWidth\r\n            onChange={(e) => setImage(e.target.value)}\r\n          />\r\n          <div className={classes.unitsForm}>\r\n            <Typography color=\"textSecondary\">*Units (In KG)</Typography>\r\n            <div className={classes.sliderHolder}>\r\n              <Slider\r\n                className={classes.slider}\r\n                defaultValue={0}\r\n                value={typeof units === \"number\" ? units : 0}\r\n                onChange={handleSliderChange}\r\n                aria-labelledby=\"input-slider\"\r\n                min={0}\r\n                max={posting.units}\r\n                valueLabelDisplay=\"auto\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"secondary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleSubmit} color=\"primary\">\r\n            Place Order\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Snackbar\r\n        open={noName || noAddress || noUnits}\r\n        autoHideDuration={3000}\r\n        onClose={handleAlertClose}\r\n      >\r\n        <Alert\r\n          className={classes.alert}\r\n          onClose={handleAlertClose}\r\n          severity=\"error\"\r\n        >\r\n          {getDisplayLabel()}\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}